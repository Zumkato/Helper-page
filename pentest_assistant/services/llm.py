"""Interfaces for language model providers."""

from __future__ import annotations

from abc import ABC, abstractmethod


class LLMProvider(ABC):
    """Abstract base class for language model providers."""

    @abstractmethod
    async def generate(self, prompt: str) -> str:
        """Generate text from the given prompt."""
        raise NotImplementedError


class EchoLLM(LLMProvider):
    """Simple stub implementation that echoes the prompt back."""

    async def generate(self, prompt: str) -> str:
        return f"LLM response to: {prompt}"
