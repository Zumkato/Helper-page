"""Database models for the pentest assistant application."""

from __future__ import annotations
from datetime import datetime
from typing import List, Optional

from sqlmodel import Field, Relationship, SQLModel



class Project(SQLModel, table=True):
    """Represents a penetration testing project or engagement."""

    id: Optional[int] = Field(default=None, primary_key=True)
    name: str
    description: Optional[str] = None
    created_at: datetime = Field(default_factory=datetime.utcnow)

    # Relationships
    notes: List["Note"] = Relationship(back_populates="project")
    attack_chains: List["AttackChain"] = Relationship(back_populates="project")
    runs: List["Run"] = Relationship(back_populates="project")


class Note(SQLModel, table=True):
    """A markdown note tied to a project."""

    id: Optional[int] = Field(default=None, primary_key=True)
    project_id: int = Field(foreign_key="project.id")
    content: str
    created_at: datetime = Field(default_factory=datetime.utcnow)
    project: Optional[Project] = Relationship(back_populates="notes")


class AttackChain(SQLModel, table=True):
    """Collection of ordered steps representing an attack chain."""

    id: Optional[int] = Field(default=None, primary_key=True)
    project_id: int = Field(foreign_key="project.id")
    name: str
    description: Optional[str] = None
    project: Optional[Project] = Relationship(back_populates="attack_chains")
    steps: List["ChainStep"] = Relationship(back_populates="chain")


class ChainStep(SQLModel, table=True):
    """Single step in an :class:`AttackChain`."""

    id: Optional[int] = Field(default=None, primary_key=True)
    chain_id: int = Field(foreign_key="attackchain.id")
    order: int
    action: str
    result: Optional[str] = None
    chain: Optional[AttackChain] = Relationship(back_populates="steps")


class Run(SQLModel, table=True):
    """Represents a command execution result."""

    id: Optional[int] = Field(default=None, primary_key=True)
    project_id: int = Field(foreign_key="project.id")
    command: str
    output: str
    created_at: datetime = Field(default_factory=datetime.utcnow)
    project: Optional[Project] = Relationship(back_populates="runs")

